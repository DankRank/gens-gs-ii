/***************************************************************************
 * mdZ80/tests: Gens Z80 Emulator. (Test Suite)                            *
 * InsnTests.prg_rom.inc.h: Program ROM for instruction tests.             *
 *                                                                         *
 * Copyright (c) 2011-2013 by David Korth.                                 *
 *                                                                         *
 * This program is free software; you can redistribute it and/or modify it *
 * under the terms of the GNU General Public License as published by the   *
 * Free Software Foundation; either version 2 of the License, or (at your  *
 * option) any later version.                                              *
 *                                                                         *
 * This program is distributed in the hope that it will be useful, but     *
 * WITHOUT ANY WARRANTY; without even the implied warranty of              *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *
 * GNU General Public License for more details.                            *
 *                                                                         *
 * You should have received a copy of the GNU General Public License along *
 * with this program; if not, write to the Free Software Foundation, Inc., *
 * 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.           *
 ***************************************************************************/

/**
 * Program ROM. (Mapped to $8000)
 * All tests are followed by HALT.
 */
const uint8_t InsnTests::prg_rom[0x8000] = {
	// $8000: NOP
	0x00, 0x76,

	/*! LD R, R */

	// $8002: LD A, [ABCDEHL]
	0x7F, 0x76, 0x78, 0x76, 0x79, 0x76, 0x7A, 0x76,
	0x7B, 0x76, 0x7C, 0x76, 0x7D, 0x76,

	// $8010: LD B, [ABCDEHL]
	0x47, 0x76, 0x40, 0x76, 0x41, 0x76, 0x42, 0x76,
	0x43, 0x76, 0x44, 0x76, 0x45, 0x76,

	// $801E: LD C, [ABCDEHL]
	0x4F, 0x76, 0x48, 0x76, 0x49, 0x76, 0x4A, 0x76,
	0x4B, 0x76, 0x4C, 0x76, 0x4D, 0x76,

	// $802C: LD D, [ABCDEHL]
	0x57, 0x76, 0x50, 0x76, 0x51, 0x76, 0x52, 0x76,
	0x53, 0x76, 0x54, 0x76, 0x55, 0x76,

	// $803A: LD E, [ABCDEHL]
	0x5F, 0x76, 0x58, 0x76, 0x59, 0x76, 0x5A, 0x76,
	0x5B, 0x76, 0x5C, 0x76, 0x5D, 0x76,

	// $8048: LD H, [ABCDEHL]
	0x67, 0x76, 0x60, 0x76, 0x61, 0x76, 0x62, 0x76,
	0x63, 0x76, 0x64, 0x76, 0x65, 0x76,

	// $8056: LD L, [ABCDEHL]
	0x6F, 0x76, 0x68, 0x76, 0x69, 0x76, 0x6A, 0x76,
	0x6B, 0x76, 0x6C, 0x76, 0x6D, 0x76,

	/*! (DD) LD R, R */

	// $8064: (DD) LD A, [ABCDE/IXh/IXl]
	0xDD, 0x7F, 0x76, 0xDD, 0x78, 0x76,
	0xDD, 0x79, 0x76, 0xDD, 0x7A, 0x76,
	0xDD, 0x7B, 0x76, 0xDD, 0x7C, 0x76,
	0xDD, 0x7D, 0x76,

	// $8079: (DD) LD B, [ABCDE/IXh/IXl]
	0xDD, 0x47, 0x76, 0xDD, 0x40, 0x76,
	0xDD, 0x41, 0x76, 0xDD, 0x42, 0x76,
	0xDD, 0x43, 0x76, 0xDD, 0x44, 0x76,
	0xDD, 0x45, 0x76,

	// $808E: (DD) LD C, [ABCDE/IXh/IXl]
	0xDD, 0x4F, 0x76, 0xDD, 0x48, 0x76,
	0xDD, 0x49, 0x76, 0xDD, 0x4A, 0x76,
	0xDD, 0x4B, 0x76, 0xDD, 0x4C, 0x76,
	0xDD, 0x4D, 0x76,

	// $80A3: (DD) LD D, [ABCDE/IXh/IXl]
	0xDD, 0x57, 0x76, 0xDD, 0x50, 0x76,
	0xDD, 0x51, 0x76, 0xDD, 0x52, 0x76,
	0xDD, 0x53, 0x76, 0xDD, 0x54, 0x76,
	0xDD, 0x55, 0x76,

	// $80B8: (DD) LD E, [ABCDE/IXh/IXl]
	0xDD, 0x5F, 0x76, 0xDD, 0x58, 0x76,
	0xDD, 0x59, 0x76, 0xDD, 0x5A, 0x76,
	0xDD, 0x5B, 0x76, 0xDD, 0x5C, 0x76,
	0xDD, 0x5D, 0x76,

	// $80CD: (DD) LD IXh, [ABCDE/IXh/IXl]
	0xDD, 0x67, 0x76, 0xDD, 0x60, 0x76,
	0xDD, 0x61, 0x76, 0xDD, 0x62, 0x76,
	0xDD, 0x63, 0x76, 0xDD, 0x64, 0x76,
	0xDD, 0x65, 0x76,

	// $80E2: (DD) LD IXl, [ABCDE/IXh/IXl]
	0xDD, 0x6F, 0x76, 0xDD, 0x68, 0x76,
	0xDD, 0x69, 0x76, 0xDD, 0x6A, 0x76,
	0xDD, 0x6B, 0x76, 0xDD, 0x6C, 0x76,
	0xDD, 0x6D, 0x76,

	/*! (FD) LD R, R */

	// $80F7: (FD) LD A, [ABCDE/IYh/IYl]
	0xFD, 0x7F, 0x76, 0xFD, 0x78, 0x76,
	0xFD, 0x79, 0x76, 0xFD, 0x7A, 0x76,
	0xFD, 0x7B, 0x76, 0xFD, 0x7C, 0x76,
	0xFD, 0x7D, 0x76,

	// $810C: (FD) LD B, [ABCDE/IYh/IYl]
	0xFD, 0x47, 0x76, 0xFD, 0x40, 0x76,
	0xFD, 0x41, 0x76, 0xFD, 0x42, 0x76,
	0xFD, 0x43, 0x76, 0xFD, 0x44, 0x76,
	0xFD, 0x45, 0x76,

	// $8121: (FD) LD C, [ABCDE/IYh/IYl]
	0xFD, 0x4F, 0x76, 0xFD, 0x48, 0x76,
	0xFD, 0x49, 0x76, 0xFD, 0x4A, 0x76,
	0xFD, 0x4B, 0x76, 0xFD, 0x4C, 0x76,
	0xFD, 0x4D, 0x76,

	// $8136: (FD) LD D, [ABCDE/IYh/IYl]
	0xFD, 0x57, 0x76, 0xFD, 0x50, 0x76,
	0xFD, 0x51, 0x76, 0xFD, 0x52, 0x76,
	0xFD, 0x53, 0x76, 0xFD, 0x54, 0x76,
	0xFD, 0x55, 0x76,

	// $814B: (FD) LD E, [ABCDE/IYh/IYl]
	0xFD, 0x5F, 0x76, 0xFD, 0x58, 0x76,
	0xFD, 0x59, 0x76, 0xFD, 0x5A, 0x76,
	0xFD, 0x5B, 0x76, 0xFD, 0x5C, 0x76,
	0xFD, 0x5D, 0x76,

	// $8160: (FD) LD IYh, [ABCDE/IYh/IYl]
	0xFD, 0x67, 0x76, 0xFD, 0x60, 0x76,
	0xFD, 0x61, 0x76, 0xFD, 0x62, 0x76,
	0xFD, 0x63, 0x76, 0xFD, 0x64, 0x76,
	0xFD, 0x65, 0x76,

	// $8175: (FD) LD IYl, [ABCDE/IYh/IYl]
	0xFD, 0x6F, 0x76, 0xFD, 0x68, 0x76,
	0xFD, 0x69, 0x76, 0xFD, 0x6A, 0x76,
	0xFD, 0x6B, 0x76, 0xFD, 0x6C, 0x76,
	0xFD, 0x6D, 0x76,

	// $8002: LD BC, NN
	//0x01, 0x34, 0x12, 0x76,
};
