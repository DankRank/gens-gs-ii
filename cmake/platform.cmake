# Platform-specific functionality.

# Hack to remove -rdynamic from CFLAGS and CXXFLAGS
# See http://public.kitware.com/pipermail/cmake/2006-July/010404.html
IF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)
	SET(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS)
ENDIF()

# Don't embed rpaths in the executables.
SET(CMAKE_SKIP_RPATH ON)

# If we're not using x86, disable emulation functionality.
# TODO: Port everything from asm to C/C++!
# TODO: Add configuration option.
INCLUDE(CheckSystemX8632)
CHECK_SYSTEM_X86_32(GENS_CPU_X86_32)
IF(GENS_CPU_X86_32)
	SET(GENS_ENABLE_EMULATION 1)
ENDIF(GENS_CPU_X86_32)
IF(NOT GENS_ENABLE_EMULATION)
	MESSAGE(WARNING "System is not X86_32; CPU emulation will be disabled. (FOR DEBUGGING ONLY)")
ENDIF(NOT GENS_ENABLE_EMULATION)

# Common flag variables:
# - GENS_C_FLAGS_COMMON
# - GENS_CXX_FLAGS_COMMON
# - GENS_EXE_LINKER_FLAGS_COMMON
# - GENS_SHARED_LINKER_FLAGS_COMMON
# - GENS_C_FLAGS_DEBUG
# - GENS_CXX_FLAGS_DEBUG
# - GENS_EXE_LINKER_FLAGS_DEBUG
# - GENS_SHARED_LINKER_FLAGS_DEBUG
# - GENS_C_FLAGS_RELEASE
# - GENS_CXX_FLAGS_RELEASE
# - GENS_EXE_LINKER_FLAGS_RELEASE
# - GENS_SHARED_LINKER_FLAGS_RELEASE
#
# DEBUG and RELEASE variables do *not* include COMMON.
IF(MSVC)
	INCLUDE(cmake/platform/msvc.cmake)
ELSE(MSVC)
	INCLUDE(cmake/platform/gcc.cmake)
ENDIF(MSVC)

# Platform-specific configuration.
IF(WIN32)
	INCLUDE(cmake/platform/win32.cmake)
ENDIF(WIN32)

SET(CMAKE_C_FLAGS_DEBUG			"${CMAKE_C_FLAGS_DEBUG} ${GENS_C_FLAGS_COMMON} ${GENS_C_FLAGS_DEBUG}")
SET(CMAKE_CXX_FLAGS_DEBUG		"${CMAKE_CXX_FLAGS_DEBUG} ${GENS_CXX_FLAGS_COMMON} ${GENS_CXX_FLAGS_DEBUG}")
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG	"${CMAKE_EXE_LINKER_FLAGS_DEBUG} ${GENS_EXE_LINKER_FLAGS_COMMON} ${GENS_EXE_LINKER_FLAGS_DEBUG}")
SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG	"${CMAKE_SHARED_LINKER_FLAGS_DEBUG} ${GENS_SHARED_LINKER_FLAGS_COMMON} ${GENS_SHARED_LINKER_FLAGS_DEBUG}")
SET(CMAKE_C_FLAGS_RELEASE		"${CMAKE_C_FLAGS_RELEASE} ${GENS_C_FLAGS_COMMON} ${GENS_C_FLAGS_RELEASE}")
SET(CMAKE_CXX_FLAGS_RELEASE		"${CMAKE_CXX_FLAGS_RELEASE} ${GENS_CXX_FLAGS_COMMON} ${GENS_CXX_FLAGS_RELEASE}")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE	"${CMAKE_EXE_LINKER_FLAGS_RELEASE} ${GENS_EXE_LINKER_FLAGS_COMMON} ${GENS_EXE_LINKER_FLAGS_RELEASE}")
SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE	"${CMAKE_SHARED_LINKER_FLAGS_RELEASE} ${GENS_SHARED_LINKER_FLAGS_COMMON} ${GENS_SHARED_LINKER_FLAGS_RELEASE}")
