# Platform-specific functionality.

# Hack to remove -rdynamic from CFLAGS and CXXFLAGS
# See http://public.kitware.com/pipermail/cmake/2006-July/010404.html
IF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS)
	SET(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS)
ENDIF()

# Don't embed rpaths in the executables.
SET(CMAKE_SKIP_RPATH ON)

# If we're not using x86, disable emulation functionality.
# TODO: Port everything from asm to C/C++!
# TODO: Add configuration option.
INCLUDE(CheckSystemX8632)
CHECK_SYSTEM_X86_32(GENS_CPU_X86_32)
IF(GENS_CPU_X86_32)
	SET(GENS_ENABLE_EMULATION 1)
ENDIF(GENS_CPU_X86_32)
IF(NOT GENS_ENABLE_EMULATION)
	MESSAGE(WARNING "System is not X86_32; CPU emulation will be disabled. (FOR DEBUGGING ONLY)")
ENDIF(NOT GENS_ENABLE_EMULATION)

# Check what flag is needed for C99 support.
INCLUDE(CheckC99CompilerFlag)
CHECK_C99_COMPILER_FLAG(GENS_C99_CFLAG)

# Disable C++ RTTI.
INCLUDE(CheckCXXNoRTTICompilerFlag)
CHECK_CXX_NO_RTTI_COMPILER_FLAG(GENS_CXX_NO_RTTI_CXXFLAG)

# Disable C++ exceptions.
INCLUDE(CheckCXXNoExceptionsCompilerFlag)
CHECK_CXX_NO_EXCEPTIONS_COMPILER_FLAG(GENS_CXX_NO_EXCEPTIONS_CXXFLAG)

# Test for common CFLAGS and CXXFLAGS.
INCLUDE(CheckCCompilerFlag)
INCLUDE(CheckCXXCompilerFlag)
SET(GENS_CFLAGS_COMMON "")
SET(GENS_CXXFLAGS_COMMON "${GENS_CXX_NO_RTTI_CFLAG} ${GENS_CXX_NO_EXCEPTIONS_CFLAG}")
FOREACH(FLAG_TEST "-Wall" "-Wextra")
	CHECK_C_COMPILER_FLAG("${FLAG_TEST}" CFLAG_${FLAG_TEST})
	IF(CFLAG_${FLAG_TEST})
		SET(GENS_CFLAGS_COMMON "${GENS_CFLAGS_COMMON} ${FLAG_TEST}")
	ENDIF(CFLAG_${FLAG_TEST})
	UNSET(CFLAG_${FLAG_TEST})
	
	CHECK_CXX_COMPILER_FLAG("${FLAG_TEST}" CXXFLAG_${FLAG_TEST})
	IF(CXXFLAG_${FLAG_TEST})
		SET(GENS_CXXFLAGS_COMMON "${GENS_CXXFLAGS_COMMON} ${FLAG_TEST}")
	ENDIF(CXXFLAG_${FLAG_TEST})
	UNSET(CXXFLAG_${FLAG_TEST})
ENDFOREACH()

# Test for common LDFLAGS.
# TODO: Doesn't work on OS X. (which means it's not really testing it!)
SET(GENS_LDFLAGS_COMMON "")
IF(NOT APPLE)
	FOREACH(FLAG_TEST "-Wl,-O1" "-Wl,--sort-common" "-Wl,--as-needed")
		CHECK_C_COMPILER_FLAG("${FLAG_TEST}" LDFLAG_${FLAG_TEST})
		IF(LDFLAG_${FLAG_TEST})
			SET(GENS_LDFLAGS_COMMON "${GENS_LDFLAGS_COMMON} ${FLAG_TEST}")
		ENDIF(LDFLAG_${FLAG_TEST})
		UNSET(LDFLAG_${FLAG_TEST})
	ENDFOREACH()
ENDIF(NOT APPLE)

# Platform-specific configuration.
SET(GENS_CFLAGS_PLATFORM "")
SET(GENS_CXXFLAGS_PLATFORM "")
SET(GENS_LDFLAGS_PLATFORM "")
IF(WIN32)
	INCLUDE(CMake/platform/win32.cmake)
ELSEIF(UNIX)
	INCLUDE(CMake/platform/unix.cmake)
ENDIF()

# Set CFLAGS/CXXFLAGS based on build type.
# TODO: Move -DQT_NO_DEBUG to gens-qt4?
SET(CMAKE_C_FLAGS_DEBUG			"-O0 ${GENS_C99_CFLAG} ${GENS_CFLAGS_COMMON} ${GENS_CFLAGS_PLATFORM}")
SET(CMAKE_CXX_FLAGS_DEBUG		"-O0 ${GENS_CXXFLAGS_COMMON} ${GENS_CXXFLAGS_PLATFORM}")
SET(CMAKE_C_FLAGS_RELEASE		"-O2 -DNDEBUG -DQT_NO_DEBUG ${GENS_C99_CFLAG} ${GENS_CFLAGS_COMMON} ${GENS_CFLAGS_PLATFORM}")
SET(CMAKE_CXX_FLAGS_RELEASE		"-O2 -DNDEBUG -DQT_NO_DEBUG ${GENS_CXXFLAGS_COMMON} ${GENS_CXXFLAGS_PLATFORM}")
# TODO: Arch-specific release build flags.
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG	"${GENS_LDFLAGS_COMMON} ${GENS_LDFLAGS_PLATFORM}")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE	"${GENS_LDFLAGS_COMMON} ${GENS_LDFLAGS_PLATFORM}")

# Architecture-specific release CFLAGS/CXXFLAGS.
IF(GENS_CPU_X86_32)
SET(CMAKE_C_FLAGS_RELEASE		"${CMAKE_C_FLAGS_RELEASE} -march=i686")
SET(CMAKE_CXX_FLAGS_RELEASE		"${CMAKE_CXX_FLAGS_RELEASE} -march=i686")
ENDIF(GENS_CPU_X86_32)

# Unset the temporary variables.
UNSET(GENS_C99_CFLAG)
UNSET(GENS_CFLAGS_COMMON)
UNSET(GENS_CFLAGS_PLATFORM)
UNSET(GENS_LDFLAGS_COMMON)
UNSET(GENS_LDFLAGS_PLATFORM)
